.log:
  dtype: dict
  sdesc: Controls the logger

  .file:
    dtype: path
    sdesc: File to write log outputs to. Set to False/null to not write to file
    default: amd.log

  .mode:
    dtype: str
    sdesc: "File write mode, ie: `write` = overwite the file, `append` = append to existing"
    default: write
    checks:
      - oneof:
        - write
        - append

  .level:
    dtype: str
    sdesc: Logger level. This is the level that will write to file if enabled
    default: DEBUG
    checks:
      - oneof:
        - DEBUG
        - INFO
        - WARNING
        - ERROR
        - EXCEPTION

  .terminal:
    dtype: str
    sdesc: The terminal level to log, ie. logger level to write to terminal. This can be different than the file level
    default: ${.level}
    checks:
      - oneof:
        - DEBUG
        - INFO
        - WARNING
        - ERROR
        - EXCEPTION


.input:
  dtype: dict
  sdesc: Input file parameters

  .granules:
    dtype: dict
    sdesc: Input EMIT granule files

    .dir:
      dtype: path
      sdesc: Directory to find granule data and/or to download to
      default: .

    .subdir:
      dtype: bool
      sdesc: Set granule data to be a subdirectory of [dir], eg. [dir]/[granule]/products.nc
      default: False

    .products:
      dtype: list
      sdesc: Granule IDs to process
      default: []

  .rasters:
    dtype: dict
    sdesc: Input EMIT raster files

    .dir:
      dtype: path
      sdesc: Directory to find raster data
      default: .

    .products:
      dtype: list
      sdesc: Raster IDs to process (either the raster or the header file name)
      default: []

.output:
  dtype: dict
  sdesc: Processed output parameters

  .save:
    dtype: bool
    sdesc: Enables/disables saving output AMD products
    default: True

  .dir:
    dtype: path
    sdesc: Path to output to
    default: output/

  .subdir:
    dtype: bool
    sdesc: Outputs will be placed into an identifier subdirectory based on the input data
    default: True

  .netcdf:
    dtype: bool
    sdesc: Output as NetCDF4
    default: false

  .merge:
    dtype: bool
    sdesc: Merge classifications together into one file
    default: false

  .geotiff:
    dtype: bool
    sdesc: Output as GeoTIFF
    default: True

  .crs:
    dtype: str
    sdesc: CRS to set for GeoTIFFs
    default: epsg:4326

.download:
  dtype: dict
  sdesc: Download data from earthaccess

  .output:
    dtype: path
    sdesc: Path to download to
    default: ./downloads

  .urls:
    dtype: list
    sdesc: URLs to download

.subselect:
  dtype: dict
  sdesc: Subselect input data along dimensions before processing

.hashmap:
  dtype: dict
  sdesc: Mapping minerals to an ID
  match:
    - case: list
      key: '*'
      match:
        - case: int
          key: '*'
          dtype: float

.colors:
  dtype: dict
  sdesc: Map mineral IDs to an RGBA color
  match:
    - case: list
      key: '*'
      sdesc: ID to RGBA
      match:
        - case: int
          key: '*'
          dtype: float
          checks:
            - between:
                lower: 0
                upper: 255
                inclusive: True
        - case: int
          key: _key
          value: 0
          sdesc: Red channel
        - case: int
          key: _key
          value: 1
          sdesc: Green channel
        - case: int
          key: _key
          value: 2
          sdesc: Blue channel
        - case: int
          key: _key
          value: 3
          sdesc: Alpha channel

.classify:
  dtype: dict
  sdesc: Classify these variables
  match:
    - case: dict
      key: '*'
      sdesc: Variable to classify

      .filter:
        dtype: list
        sdesc: Filters to apply
        match:
          - case: str
            key: '*'
            sdesc: Variable to filter with
            dtype: str

      .default:
        dtype: float
        sdesc: Default fill value
        default: .nan
